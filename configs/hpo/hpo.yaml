# @package _global_

defaults:
  - _self_
  - m_preset: mlp_relu_raw
  - search_space: mlp_all
  - sampler: qcm-tpe
  - pruner: nop
  - wandb: default

# paths to train and val datasets for HPO
path_to_train_dataset: ${paths.root_dir}/data/datasets/tal_noisemaker_mn04_size=1000000_seed=300_pkl_hpo-v1
path_to_val_dataset: ${paths.root_dir}/data/datasets/tal_noisemaker_mn04_size=65536_seed=400_pkl_hpo-val_v1

# tag for the study, which will be added to the name of the study. 
# Note that if the study already exists, it will be resumed.
tag: ???

# seed for the RNGs
seed: 42

############ Optuna configs
# number of trials to run
# if sampler is qcm-tpe, then the number of TPE trials is num_trials-sampler.num_startup_trials
num_trials: 203

# in which direction the objective should be optimized (minimize or maximize)
direction: maximize

# metric to optimize (for optuna lightning callback)
metric_to_optimize: val/mrr


############ Training configs
# batch size used for training
batch_size: 512

# number of workers for the train and val dataloader
num_workers: 0 # reading from a torch tensor in memory is cheap, doesn't worth the overhead
num_ranks_mrr: 128

# kwargs for lightning trainer
trainer:
  max_epochs: 1
  log_every_n_steps: 50
  val_check_interval: 0.25

# Optimizer to use
optimizer:
  _target_: torch.optim.Adam
  _partial_: true
  weight_decay: 0.0

# LR scheduler
lr_scheduler:
  _target_: utils.lr_schedulers.lin_cos_scheduler_builder
  _partial_: true
  linear_start_factor: 1
  linear_end_factor: 1

############ Artifacts
# name of the optuna study
study_name: ${m_preset.name}_${tag}

############ Hydra configs
paths:
  root_dir: ${oc.env:PROJECT_ROOT}
  output_dir: ${hydra:runtime.output_dir}

hydra:
  run:
    dir: ${paths.root_dir}/logs/optuna/${m_preset.name}_${tag}
  sweep:
    dir:  ${paths.root_dir}/logs/optuna/${m_preset.name}_${tag}
    subdir: ${hydra.job.num}

  job: 
    chdir: True

  job_logging:
    handlers:
      file:
        filename: ${hydra.runtime.output_dir}/${hydra.job.name}.log
    formatters:
      simple:
        format: '%(message)s'
